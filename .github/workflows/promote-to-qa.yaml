name: Triggered manually via workflow_dispatch to build docker image for prod and promote image to prod.

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Enter the image tag to promote"
        required: true
      promote_from:
        description: "Source environment"
        required: true
        default: "staging"
      promote_to:
        description: "Target environment"
        required: true
        default: "prod"

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:

  docker-build-and-scan:
    name: Docker Build and Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: docker-${{ github.sha }}
          restore-keys: docker-

      - name: Azure Login (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure ACR Login
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build Docker Image
        run: |
          IMAGE_TAG=springboot-app:${{ github.event.inputs.image_tag }}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $IMAGE_TAG .

      - name: Scan Docker Image with Trivy and export report
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "image"
          severity: CRITICAL,HIGH
          scan-ref: ${{ env.IMAGE_TAG }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          output: "trivy-image-report.txt"

      - name: Push Image to ACR
        run: |
          ACR_TAG=${{ secrets.ACR_NAME }}.azurecr.io/springboot-app:${{ github.event.inputs.image_tag }}
          docker tag $ACR_TAG
          docker push $ACR_TAG


  update-prod-manifest:
    runs-on: ubuntu-latest
    needs: docker-build-and-scan
    steps:
      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: Vikas-Prince/test-ops
          token: ${{ secrets.GHCR_TOKEN }}
          path: test-ops

      - name: Configure Git user
        run: |
          cd test-ops
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      - name: Update image tag in Prod rollout-patch
        run: |
          cd test-ops
          sed -i "s|image: .*|image: ${{ secrets.ACR_LOGIN_SERVER }}/springboot-app:${{ github.event.inputs.image_tag }}|" environments/prod/rollout-patch.yaml
      - name: Commit & PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GHCR_TOKEN }}
          commit-message: "chore(prod): Promote ${{ github.event.inputs.image_tag }} to prod"
          title: "Promote to Prod - ${{ github.event.inputs.image_tag }}"
          body: "Triggered manually via workflow_dispatch."
          branch: promote-prod-${{ github.run_id }}
          base: main
          path: test-ops

