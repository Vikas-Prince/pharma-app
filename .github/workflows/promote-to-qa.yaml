name: Triggered manually via workflow_dispatch to promote image to QA.

on:
  workflow_dispatch:
    inputs:
      promote_from:
        description: "Source environment"
        required: true
        default: "dev"
      promote_to:
        description: "Target environment"
        required: true
        default: "qa"

permissions:
  contents: write
  pull-requests: write

jobs:
  docker-build-and-scan:
    name: Docker Build and Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: docker-${{ github.sha }}
          restore-keys: docker-

      - name: Build Docker Image
        run: |
          IMAGE_TAG=springboot-app:${{ github.sha }}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $IMAGE_TAG .

      - name: Scan Docker Image with Trivy and export report
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "image"
          severity: CRITICAL,HIGH
          scan-ref: ${{ env.IMAGE_TAG }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          output: "trivy-image-report.txt"

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        run: |
          DOCKER_HUB_TAG=${{ secrets.DOCKER_USERNAME }}/csi-pharma-qa:${{ github.sha }}
          docker tag $IMAGE_TAG $DOCKER_HUB_TAG
          docker push $DOCKER_HUB_TAG

  update-qa-manifest:
    runs-on: ubuntu-latest
    needs: docker-build-and-scan

    steps:
      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: Vikas-Prince/test-ops
          token: ${{ secrets.GHCR_TOKEN }}
          path: test-ops

      - name: Configure Git user
        run: |
          cd test-ops
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: Update image tag in QA rollout-patch
        run: |
          cd test-ops
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/csi-pharma-qa:${{ github.sha }}|" environments/prod/rollout-patch.yaml

      - name: Commit & PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GHCR_TOKEN }}
          commit-message: "chore(QA): Promote ${{ github.sha }} to QA"
          title: "Promote to QA - ${{ github.sha }}"
          body: "Triggered manually via workflow_dispatch."
          branch: promote-QA-${{ github.run_id }}
          base: main
          path: test-ops

  slack-notify:
    runs-on: ubuntu-latest
    needs: update-qa-manifest
    if: always()
    steps:
      - name: üì¢ Slack Notification (Manual Trigger)
        run: |
          STATUS="${{ job.status }}"

          # Define Slack message color and status-specific messages
          if [ "$STATUS" == "success" ]; then
            COLOR="good"
            MESSAGE="Deployment succeeded! üéâ"
            STATUS_ICON=":white_check_mark:"
          elif [ "$STATUS" == "failure" ]; then
            COLOR="danger"
            MESSAGE="Deployment failed! ‚ùå Please check the logs."
            STATUS_ICON=":x:"
          elif [ "$STATUS" == "cancelled" ]; then
            COLOR="warning"
            MESSAGE="Deployment was canceled! ‚ö†Ô∏è"
            STATUS_ICON=":warning:"
          elif [ "$STATUS" == "skipped" ]; then
            COLOR="gray"
            MESSAGE="Job was skipped. ‚è∏Ô∏è"
            STATUS_ICON=":pause_button:"
          else
            COLOR="gray"
            MESSAGE="Pipeline completed with status: $STATUS"
            STATUS_ICON=":question:"
          fi

          # Construct the payload with dynamic status and additional report links
          PAYLOAD="{
            \"text\": \"*CI/CD Pipeline - $STATUS* $STATUS_ICON\",
            \"attachments\": [
              {
                \"fallback\": \"Job Details\",
                \"color\": \"$COLOR\",
                \"fields\": [
                  {
                    \"title\": \"Repository\",
                    \"value\": \"${{ github.repository }}\",
                    \"short\": true
                  },
                  {
                    \"title\": \"Branch\",
                    \"value\": \"${{ github.ref_name }}\",
                    \"short\": true
                  },
                  {
                    \"title\": \"Job\",
                    \"value\": \"${{ github.job }}\",
                    \"short\": true
                  },
                  {
                    \"title\": \"Commit\",
                    \"value\": \"<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>\",
                    \"short\": false
                  },
                  {
                    \"title\": \"Author\",
                    \"value\": \"${{ github.actor }}\",
                    \"short\": true
                  },
                  {
                    \"title\": \"Image Tag\",
                    \"value\": \"${{ github.sha }}\",
                    \"short\": true
                  },
                  {
                    \"title\": \"Source Environment\",
                    \"value\": \"${{ github.event.inputs.promote_from }}\",
                    \"short\": true
                  },
                  {
                    \"title\": \"Target Environment\",
                    \"value\": \"${{ github.event.inputs.promote_to }}\",
                    \"short\": true
                  }
                ]
              }
            ]
          }"

          # Send the notification to Slack
          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" ${{ secrets.SLACK_WEBHOOK_URL }}
